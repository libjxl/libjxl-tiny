// Copyright (c) the JPEG XL Project Authors.
//
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file or at
// https://developers.google.com/open-source/licenses/bsd

#ifndef ENCODER_STATIC_ENTROPY_CODES_H_
#define ENCODER_STATIC_ENTROPY_CODES_H_

#include <stdint.h>

#include "encoder/config.h"
#include "encoder/entropy_code.h"

namespace jxl {

#if OPTIMIZE_CODE
static constexpr size_t kNumDCPrefixCodes = 45;
static constexpr const PrefixCode* kDCPrefixCodes = nullptr;
static constexpr uint8_t kDCContextMap[] = {
    0,  1,  2,  3,  4,  5,  6,  7,  8,  9,  10, 11, 12, 13, 14,
    15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
    30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44,
};
#else
static constexpr uint8_t kDCContextMap[] = {
    0, 1, 2, 2, 1, 1, 3, 0, 3, 0, 4, 5, 6, 7, 7, 7, 7, 7, 7, 7, 6, 6, 6,
    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 6, 7, 6, 7, 6, 6, 5, 5,
};
static constexpr size_t kNumDCPrefixCodes = 8;
static constexpr PrefixCode kDCPrefixCodes[kNumDCPrefixCodes] = {
    {{
         6, 7, 7, 7, 7, 7, 7, 7, 1, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
         7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
         7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
     },
     {
         0x0001, 0x0021, 0x0061, 0x0011, 0x0051, 0x0031, 0x0071, 0x0009,
         0x0000, 0x0049, 0x0029, 0x0069, 0x0019, 0x0059, 0x0039, 0x0079,
         0x0005, 0x0045, 0x0025, 0x0065, 0x0015, 0x0055, 0x0035, 0x0075,
         0x000d, 0x004d, 0x002d, 0x006d, 0x001d, 0x005d, 0x003d, 0x007d,
         0x0003, 0x0043, 0x0023, 0x0063, 0x0013, 0x0053, 0x0033, 0x0073,
         0x000b, 0x004b, 0x002b, 0x006b, 0x001b, 0x005b, 0x003b, 0x007b,
         0x0007, 0x0047, 0x0027, 0x0067, 0x0017, 0x0057, 0x0037, 0x0077,
         0x000f, 0x004f, 0x002f, 0x006f, 0x001f, 0x005f, 0x003f, 0x007f,
     }},
    {{
         1,  3,  2,  5,  4,  7,  7,  8,  8,  10, 9,  12, 10, 13, 11, 14,
         13, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
         14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
         14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
     },
     {
         0x0000, 0x0003, 0x0001, 0x000f, 0x0007, 0x001f, 0x005f, 0x003f,
         0x00bf, 0x017f, 0x007f, 0x04ff, 0x037f, 0x0cff, 0x00ff, 0x02ff,
         0x1cff, 0x22ff, 0x12ff, 0x32ff, 0x0aff, 0x2aff, 0x1aff, 0x3aff,
         0x06ff, 0x26ff, 0x16ff, 0x36ff, 0x0eff, 0x2eff, 0x1eff, 0x3eff,
         0x01ff, 0x21ff, 0x11ff, 0x31ff, 0x09ff, 0x29ff, 0x19ff, 0x39ff,
         0x05ff, 0x25ff, 0x15ff, 0x35ff, 0x0dff, 0x2dff, 0x1dff, 0x3dff,
         0x03ff, 0x23ff, 0x13ff, 0x33ff, 0x0bff, 0x2bff, 0x1bff, 0x3bff,
         0x07ff, 0x27ff, 0x17ff, 0x37ff, 0x0fff, 0x2fff, 0x1fff, 0x3fff,
     }},
    {{
         1,  2,  4,  4,  8,  4,  13, 5,  15, 6,  15, 7,  15, 9,  15, 12,
         15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
         15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
         15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
     },
     {
         0x0000, 0x0001, 0x0003, 0x000b, 0x007f, 0x0007, 0x09ff, 0x000f,
         0x19ff, 0x001f, 0x59ff, 0x003f, 0x39ff, 0x00ff, 0x79ff, 0x01ff,
         0x05ff, 0x45ff, 0x25ff, 0x65ff, 0x15ff, 0x55ff, 0x35ff, 0x75ff,
         0x0dff, 0x4dff, 0x2dff, 0x6dff, 0x1dff, 0x5dff, 0x3dff, 0x7dff,
         0x03ff, 0x43ff, 0x23ff, 0x63ff, 0x13ff, 0x53ff, 0x33ff, 0x73ff,
         0x0bff, 0x4bff, 0x2bff, 0x6bff, 0x1bff, 0x5bff, 0x3bff, 0x7bff,
         0x07ff, 0x47ff, 0x27ff, 0x67ff, 0x17ff, 0x57ff, 0x37ff, 0x77ff,
         0x0fff, 0x4fff, 0x2fff, 0x6fff, 0x1fff, 0x5fff, 0x3fff, 0x7fff,
     }},
    {{
         1, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 3, 9, 2, 9, 8, 9, 9, 9, 9, 9,
         9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,
         9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,
     },
     {
         0x0000, 0x0007, 0x0087, 0x00c7, 0x01c7, 0x0027, 0x0127, 0x00a7,
         0x01a7, 0x0067, 0x0167, 0x00e7, 0x0003, 0x01e7, 0x0001, 0x0017,
         0x0047, 0x0117, 0x0097, 0x0197, 0x0057, 0x0157, 0x00d7, 0x01d7,
         0x0037, 0x0137, 0x00b7, 0x01b7, 0x0077, 0x0177, 0x00f7, 0x01f7,
         0x000f, 0x010f, 0x008f, 0x018f, 0x004f, 0x014f, 0x00cf, 0x01cf,
         0x002f, 0x012f, 0x00af, 0x01af, 0x006f, 0x016f, 0x00ef, 0x01ef,
         0x001f, 0x011f, 0x009f, 0x019f, 0x005f, 0x015f, 0x00df, 0x01df,
         0x003f, 0x013f, 0x00bf, 0x01bf, 0x007f, 0x017f, 0x00ff, 0x01ff,
     }},
    {{
         1, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 3, 9, 2, 9, 9, 9, 9, 9, 9, 9,
         9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,
         9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,
     },
     {
         0x0000, 0x0007, 0x0087, 0x0047, 0x00c7, 0x01c7, 0x0027, 0x0127,
         0x00a7, 0x01a7, 0x0067, 0x0167, 0x0003, 0x00e7, 0x0001, 0x01e7,
         0x0017, 0x0117, 0x0097, 0x0197, 0x0057, 0x0157, 0x00d7, 0x01d7,
         0x0037, 0x0137, 0x00b7, 0x01b7, 0x0077, 0x0177, 0x00f7, 0x01f7,
         0x000f, 0x010f, 0x008f, 0x018f, 0x004f, 0x014f, 0x00cf, 0x01cf,
         0x002f, 0x012f, 0x00af, 0x01af, 0x006f, 0x016f, 0x00ef, 0x01ef,
         0x001f, 0x011f, 0x009f, 0x019f, 0x005f, 0x015f, 0x00df, 0x01df,
         0x003f, 0x013f, 0x00bf, 0x01bf, 0x007f, 0x017f, 0x00ff, 0x01ff,
     }},
    {{
         5,  6,  6,  6,  6,  7,  6,  7,  6,  7,  7,  7,  7,  8,  7,  8,
         6,  6,  6,  6,  6,  6,  6,  6,  5,  5,  5,  5,  5,  5,  5,  5,
         4,  5,  5,  5,  4,  5,  5,  5,  5,  5,  6,  6,  6,  7,  8,  9,
         10, 11, 14, 14, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
     },
     {
         0x0004, 0x0015, 0x0035, 0x000d, 0x002d, 0x0037, 0x001d, 0x0077,
         0x003d, 0x000f, 0x004f, 0x002f, 0x006f, 0x003f, 0x001f, 0x00bf,
         0x0003, 0x0023, 0x0013, 0x0033, 0x000b, 0x002b, 0x001b, 0x003b,
         0x0014, 0x000c, 0x001c, 0x0002, 0x0012, 0x000a, 0x001a, 0x0006,
         0x0000, 0x0016, 0x000e, 0x001e, 0x0008, 0x0001, 0x0011, 0x0009,
         0x0019, 0x0005, 0x0007, 0x0027, 0x0017, 0x005f, 0x007f, 0x00ff,
         0x01ff, 0x03ff, 0x07ff, 0x27ff, 0x17ff, 0x57ff, 0x37ff, 0x77ff,
         0x0fff, 0x4fff, 0x2fff, 0x6fff, 0x1fff, 0x5fff, 0x3fff, 0x7fff,
     }},
    {{
         4,  4,  4,  4,  4,  4,  5,  5,  5,  5,  5,  5,  5,  6,  6,  6,
         4,  5,  5,  5,  5,  5,  6,  6,  5,  6,  6,  7,  7,  7,  8,  8,
         8,  9,  9,  10, 10, 10, 11, 11, 10, 11, 11, 12, 11, 12, 13, 14,
         14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 15, 15, 15, 15, 15, 15,
     },
     {
         0x0000, 0x0008, 0x0004, 0x000c, 0x0002, 0x000a, 0x000e, 0x001e,
         0x0001, 0x0011, 0x0009, 0x0019, 0x0005, 0x001b, 0x003b, 0x0007,
         0x0006, 0x0015, 0x000d, 0x001d, 0x0003, 0x0013, 0x0027, 0x0017,
         0x000b, 0x0037, 0x000f, 0x002f, 0x006f, 0x001f, 0x005f, 0x00df,
         0x003f, 0x00bf, 0x01bf, 0x007f, 0x027f, 0x017f, 0x00ff, 0x04ff,
         0x037f, 0x02ff, 0x06ff, 0x05ff, 0x01ff, 0x0dff, 0x03ff, 0x13ff,
         0x33ff, 0x0bff, 0x2bff, 0x1bff, 0x3bff, 0x07ff, 0x27ff, 0x17ff,
         0x37ff, 0x0fff, 0x2fff, 0x6fff, 0x1fff, 0x5fff, 0x3fff, 0x7fff,
     }},
    {{
         5,  5,  5,  5,  5,  5,  5,  5,  6,  6,  6,  6,  6,  6,  6,  6,
         4,  4,  5,  5,  4,  4,  5,  5,  4,  5,  5,  5,  5,  6,  7,  7,
         7,  8,  8,  9,  9,  9,  9,  10, 9,  10, 10, 11, 10, 12, 13, 13,
         14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
     },
     {
         0x000a, 0x001a, 0x0006, 0x0016, 0x000e, 0x001e, 0x0001, 0x0011,
         0x000b, 0x002b, 0x001b, 0x003b, 0x0007, 0x0027, 0x0017, 0x0037,
         0x0000, 0x0008, 0x0009, 0x0019, 0x0004, 0x000c, 0x0005, 0x0015,
         0x0002, 0x000d, 0x001d, 0x0003, 0x0013, 0x000f, 0x002f, 0x006f,
         0x001f, 0x005f, 0x00df, 0x003f, 0x013f, 0x00bf, 0x01bf, 0x017f,
         0x007f, 0x037f, 0x00ff, 0x01ff, 0x02ff, 0x05ff, 0x0dff, 0x1dff,
         0x03ff, 0x23ff, 0x13ff, 0x33ff, 0x0bff, 0x2bff, 0x1bff, 0x3bff,
         0x07ff, 0x27ff, 0x17ff, 0x37ff, 0x0fff, 0x2fff, 0x1fff, 0x3fff,
     }},
};
#endif

#if OPTIMIZE_CODE
static constexpr size_t kNumACPrefixCodes = 64;
static constexpr const PrefixCode* kACPrefixCodes = nullptr;
// TODO(szabadka) Make the context map dependent on the distance setting.
/* clang-format off */
static constexpr uint8_t kACContextMap[] = {
    // Context map for number of nonzeros
    //   8x8   8x16  8x8   8x16
    //    Y     Y    X,B   X,B
          0,    1,    2,    3,    // pred:  0
          4,    5,    6,    6,    // pred:  1
          4,    5,    6,    7,    // pred:  2
          0,    5,    7,    8,    // pred:  3
          9,   10,    8,   11,    // pred:  4
         12,    4,   13,   14,    // pred:  5
         15,   15,   11,   14,    // pred:  6
         12,   16,   11,   17,    // pred:  7
         18,   19,   14,   17,    // pred:  8 -  9
         18,   19,   17,   20,    // pred: 10 - 11
         18,   19,   17,   20,    // pred: 12 - 13
         18,   19,   17,   19,    // pred: 14 - 15
         18,   18,   20,   19,    // pred: 16 - 17
         18,   21,   20,   19,    // pred: 18 - 19
         18,   21,   20,   19,    // pred: 20 - 21
         19,   21,   20,   19,    // pred: 22 - 23
         19,   21,   19,   19,    // pred: 24 - 25
         19,   22,   19,   19,    // pred: 26 - 27
         21,   22,   19,   21,    // pred: 28 - 29
         21,   22,   19,   18,    // pred: 30 - 31
         21,   23,   24,   24,    // pred: 32 - 33
         21,   23,   19,   21,    // pred: 34 - 35
         21,   23,   19,    0,    // pred: 36 - 37
         21,   23,    0,    0,    // pred: 38 - 39
         21,   23,    0,    0,    // pred: 40 - 41
         21,   23,    0,    0,    // pred: 42 - 43
         25,   26,    0,    0,    // pred: 44 - 45
         25,   26,    0,    0,    // pred: 46 - 47
         25,   26,    0,    0,    // pred: 48 - 49
         25,   27,    0,    0,    // pred: 50 - 51
         28,   27,    0,    0,    // pred: 52 - 53
         28,   27,    0,    0,    // pred: 54 - 55
         28,   27,    0,    0,    // pred: 56 - 57
         28,   27,    0,    0,    // pred: 58 - 59
         28,   27,    0,    0,    // pred: 60 - 61
         28,   27,    0,    0,    // pred: 62 - 63
          0,    0,    0,    0,    // pred: 64 -

    //
    // Zero density context map for 8x8 Y blocks
    //
    // Nonzeros left: 1
               0,  1,    1,  1,    1, 29,  // k:  1 -  3
    29, 30,   31,  3,    1, 30,   29, 29,  // k:  4 -  7
     1, 29,   30,  1,    1,  1,   30, 29,  // k:  8 - 11
    29, 29,   30,  3,   31, 30,   32, 29,  // k: 12 - 15
    31, 33,    3,  3,   32, 30,   31,  1,  // k: 16 - 23
    31,  3,   32, 31,   32, 34,   31, 32,  // k: 24 - 31
    31,  3,   32,  3,   31,  3,   31, 31,  // k: 32 - 47
    31,  3,    3,  3,    3,  3,   35, 36,  // k: 48 - 63
    // Nonzeros left: 2
               0, 31,    3, 30,    1, 29,  // k:  1 -  3
    29, 37,   31, 29,    1, 30,   30, 31,  // k:  4 -  7
     3, 29,   31, 29,    3, 31,    3, 29,  // k:  8 - 11
     3, 29,   32,  3,   30, 30,    1, 31,  // k: 12 - 15
    31, 30,   31,  3,   31,  5,    3, 30,  // k: 16 - 23
     3,  3,    3,  3,   32,  3,   31,  3,  // k: 24 - 31
    31,  3,   31,  3,    3,  3,    3,  3,  // k: 32 - 47
     3,  3,   33, 33,   34,  2,   36, 38,  // k: 48 - 63
    // Nonzeros left: 3 - 4
               0, 33,   30, 34,    3, 30,  // k:  1 -  3
    30, 34,   34, 30,   31, 34,    3, 33,  // k:  4 -  7
    34, 34,    3, 33,   31,  5,   30, 29,  // k:  8 - 11
    30, 30,    3, 33,    3, 30,   32,  5,  // k: 12 - 15
     3, 33,   30, 30,    3,  3,    3,  3,  // k: 16 - 23
    30, 30,   31,  3,   31,  3,   30, 30,  // k: 24 - 31
     3,  3,    3, 30,   30, 33,   33, 33,  // k: 32 - 47
    33, 34,   34,  2,   37, 39,   40, 40,  // k: 48 - 63
    // Nonzeros left: 5 - 8
              41,  0,   42, 35,   30,  5,  // k:  1 -  3
    34,  2,    5,  5,    3,  5,   34, 34,  // k:  4 -  7
    34, 34,    5,  5,   30,  5,   33, 34,  // k:  8 - 11
    34, 34,   33, 34,   30, 33,   31, 33,  // k: 12 - 15
    33, 34,   34, 34,    3,  5,   33, 34,  // k: 16 - 23
    33, 34,   30, 33,    3,  5,   33, 34,  // k: 24 - 31
    33, 34,   33, 34,   34, 34,   34,  2,  // k: 32 - 47
     2, 37,   39, 43,   40, 40,            // k: 48 - 59
    // Nonzeros left: 9 - 12
              36,  0,   42, 44,    2, 41,  // k:  1 -  3
    35, 36,    2, 41,   30,  5,   35, 35,  // k:  4 -  7
    35, 35,    5,  5,   33,  5,   34, 35,  // k:  8 - 11
    35, 35,   34, 35,   33,  5,   30,  5,  // k: 12 - 15
    34,  2,   34,  2,   33,  5,   34,  2,  // k: 16 - 23
    34,  2,   34,  5,   33,  5,   34,  2,  // k: 24 - 31
    34,  2,   34,  2,    2, 41,   37, 44,  // k: 32 - 47
    43, 45,   46, 46,                      // k: 48 - 55
    // Nonzeros left: 13 - 20
              47,  0,   44, 47,    2, 42,  // k:  1 -  3
    41, 44,   41, 42,   34,  5,   35, 39,  // k:  4 -  7
    35, 44,   35, 41,   34,  5,   35, 41,  // k:  8 - 11
    35, 37,   35, 41,    5,  5,   34,  5,  // k: 12 - 15
     2, 41,   35, 37,   34,  5,    2, 41,  // k: 16 - 23
    37, 39,   41, 42,    2, 41,   37, 44,  // k: 24 - 31
    37, 44,   44, 47,   45, 48,   46, 49,  // k: 32 - 47
    46, 46,                                // k: 48 - 51
    // Nonzeros left: 21 - 32
              50,  0,   50, 50,   42, 50,  // k:  1 -  3
    42, 51,   50, 50,   42, 50,   47, 51,  // k:  4 -  7
    47, 52,   42, 10,   37, 42,   44, 10,  // k:  8 - 11
    48, 52,   48, 51,   10, 50,   44, 10,  // k: 12 - 15
    48, 51,   47, 52,   44, 10,   47, 51,  // k: 16 - 23
    52, 15,   52, 51,   47, 52,   53, 54,  // k: 24 - 31
    52, 54,   49, 53,   24, 24,            // k: 32 - 43
    // Nonzeros left: 33 - 63
              55,  0,   56, 55,    0, 57,  // k:  1 -  3
     9, 57,   56, 57,    0,  9,    9, 58,  // k:  4 -  7
     9, 58,    0,  9,   15, 12,   12, 18,  // k:  8 - 11
     0, 18,   59, 18,   12, 59,   51, 15,  // k: 12 - 15
    12, 59,   12, 59,   51, 15,   15, 60,  // k: 16 - 23
    16, 16,   15, 15,   53, 24,   60, 60,  // k: 24 - 31

    //
    // Zero density context map for 8x16 and 16x8 Y blocks
    //
    // Nonzeros left: 1
               3, 33,   31,  1,   29, 30,  // k:  1 -  3
     1, 30,   31, 34,   33,  3,   31, 31,  // k:  4 -  7
    32, 30,   31, 30,   34, 30,   32, 31,  // k:  8 - 11
     1, 32,   32,  3,   31, 31,    3,  3,  // k: 12 - 15
    32, 31,   32, 32,   31,  3,   32, 31,  // k: 16 - 23
    32, 32,   32, 31,    1,  3,   32, 32,  // k: 24 - 31
    32, 31,   32, 31,   32, 31,   31, 31,  // k: 32 - 47
    31, 31,   31, 31,    3,  3,   34,  2,  // k: 48 - 63
    // Nonzeros left: 2
               1,  2,    3, 29,    6, 34,  // k:  1 -  3
    32, 33,   30,  3,    2, 34,   31, 31,  // k:  4 -  7
    32, 32,   30,  3,    3,  5,    3,  3,  // k:  8 - 11
    32, 31,    3,  3,    3, 31,    3,  3,  // k: 12 - 15
    31,  3,   31,  3,   32,  3,   31, 31,  // k: 16 - 23
    31, 31,   31,  3,   32,  5,   31, 31,  // k: 24 - 31
    31,  3,   31,  3,   31,  3,    3,  3,  // k: 32 - 47
     3,  3,   30, 30,   33, 34,   35, 36,  // k: 48 - 63
    // Nonzeros left: 3 - 4
              39, 42,   34,  2,    5, 41,  // k:  1 -  3
     3, 30,   33, 33,   33,  5,   30, 33,  // k:  4 -  7
    30, 30,   33, 33,    3,  3,   30, 33,  // k:  8 - 11
     3,  3,   30, 30,   30, 30,   31,  3,  // k: 12 - 15
    30, 30,   30, 30,   31,  3,   30, 30,  // k: 16 - 23
    31,  3,    3,  3,   31,  5,    3,  3,  // k: 24 - 31
     3,  3,    3,  3,   30, 30,   30, 30,  // k: 32 - 47
    33, 33,   33, 34,    2, 37,   38, 38,  // k: 48 - 63
    // Nonzeros left: 5 - 8
              42, 41,   37, 37,    2, 41,  // k:  1 -  3
    34,  2,    2, 35,   34,  5,   34, 34,  // k:  4 -  7
    33, 34,   34, 34,   33,  5,   34, 34,  // k:  8 - 11
    30, 33,   33, 34,   33, 34,   30,  5,  // k: 12 - 15
    33, 33,   33, 33,    3,  5,   33, 33,  // k: 16 - 23
    30, 30,   33, 33,   30, 33,   30, 30,  // k: 24 - 31
    30, 33,   33, 33,   33, 33,   34, 34,  // k: 32 - 47
    34,  2,   37, 39,   38, 38,            // k: 48 - 59
    // Nonzeros left: 9 - 12
              10, 45,   44, 43,   41, 42,  // k:  1 -  3
    35, 35,   36, 39,    2, 41,    2, 35,  // k:  4 -  7
    34,  2,    2,  2,   34,  5,   34,  2,  // k:  8 - 11
    33, 34,   34, 34,   34, 34,   33,  5,  // k: 12 - 15
    34, 34,   33, 34,   33,  5,   34, 34,  // k: 16 - 23
    33, 33,   33, 34,   33,  5,   33, 34,  // k: 24 - 31
    34, 34,   34,  2,    2,  2,   35, 37,  // k: 32 - 47
    39, 43,   40, 40,                      // k: 48 - 55
    // Nonzeros left: 13 - 20
              10, 47,   41, 42,   35, 41,  // k:  1 -  3
     2, 35,   35, 41,    2, 41,    2, 35,  // k:  4 -  7
     2,  2,    2, 35,   34,  5,    2, 35,  // k:  8 - 11
    34, 34,    2, 35,    2, 35,   34,  5,  // k: 12 - 15
     2, 35,    2, 35,    2, 41,   35, 35,  // k: 16 - 23
     2,  2,   35, 41,    2, 41,   35, 35,  // k: 24 - 31
    35, 41,   37, 44,   43, 45,   45, 45,  // k: 32 - 47
    46, 46,                                // k: 48 - 51
    // Nonzeros left: 21 - 32
               4, 50,   42, 50,   42, 50,  // k:  1 -  3
    41, 10,   42, 50,   42, 50,   42, 52,  // k:  4 -  7
    42, 47,   10, 51,   42, 50,   47, 52,  // k:  8 - 11
    41, 42,   45, 48,   47, 52,   42, 10,  // k: 12 - 15
    44, 47,   44, 47,   42, 10,   47, 52,  // k: 16 - 23
    44, 47,   52, 51,   47, 52,   47, 52,  // k: 24 - 31
    48, 49,   49, 49,   46, 53,            // k: 32 - 43
    // Nonzeros left: 33 - 63
              61, 62,   56, 63,   56, 63,  // k:  1 -  3
     0, 56,    9, 56,    0, 56,    0,  9,  // k:  4 -  7
    12,  0,    0,  9,   12,  0,    0, 18,  // k:  8 - 11
    51, 15,   12, 59,   12, 59,   15, 12,  // k: 12 - 15
    15, 12,   15, 60,   54, 15,   60, 60,  // k: 16 - 23
    53, 54,   60, 60,   24, 24,   14, 60,  // k: 24 - 31

    //
    // Zero density context map for 8x8 X and B blocks
    //
    // Nonzeros left: 1
               0, 34,    2,  2,   31,  3,  // k:  1 -  3
    34, 34,   30, 33,   32, 31,   30, 30,  // k:  4 -  7
    29, 33,    3,  3,    1, 32,    3, 31,  // k:  8 - 11
    30, 30,   30, 30,   32, 32,   32, 32,  // k: 12 - 15
    31, 31,   31, 31,   32, 32,   32, 32,  // k: 16 - 23
    31, 31,   31, 31,   32, 32,   31, 32,  // k: 24 - 31
    31, 31,   31, 31,   31, 31,   31, 31,  // k: 32 - 47
     3,  3,    3,  3,   29, 29,   29, 29,  // k: 48 - 63
    // Nonzeros left: 2
               0, 35,   35, 39,   30, 33,  // k:  1 -  3
     2, 35,   33, 34,   31,  3,   29, 33,  // k:  4 -  7
    29, 34,   30, 30,   32, 31,   30,  3,  // k:  8 - 11
    30, 30,   30, 30,   31, 31,   31, 31,  // k: 12 - 15
     3,  3,    3,  3,   31, 31,   31, 31,  // k: 16 - 23
     3,  3,    3,  3,   31, 31,   31, 31,  // k: 24 - 31
     3,  3,    3,  3,    3,  3,    3,  3,  // k: 32 - 47
    29, 29,   29, 29,   29, 29,    6,  0,  // k: 48 - 63
    // Nonzeros left: 3 - 4
               0, 44,   41, 45,   33, 34,  // k:  1 -  3
     2, 35,   34,  2,   30, 30,   33, 34,  // k:  4 -  7
    33, 34,   30, 33,   31, 31,   30, 30,  // k:  8 - 11
    30, 33,   30, 33,    3,  3,    3,  3,  // k: 12 - 15
    30, 30,   30, 30,   31,  3,    3,  3,  // k: 16 - 23
    30, 30,   30, 30,    3,  3,    3,  3,  // k: 24 - 31
     3, 30,   30, 30,   30, 30,   30, 30,  // k: 32 - 47
    29, 29,   29, 29,    2,  6,    0,  0,  // k: 48 - 63
    // Nonzeros left: 5 - 8
              42,  0,   44, 47,   34,  2,  // k:  1 -  3
     2, 37,    2, 35,   29, 33,   34,  2,  // k:  4 -  7
    34,  2,   33, 34,    3, 30,   33, 34,  // k:  8 - 11
    33, 34,   29, 34,   30, 33,   30, 30,  // k: 12 - 15
    33, 33,   33, 33,    3, 30,   30, 30,  // k: 16 - 23
    29, 33,   33, 33,   30, 30,   30, 33,  // k: 24 - 31
    33, 33,   29, 29,   29, 29,   29, 29,  // k: 32 - 47
    29, 29,    6,  0,    0,  0,            // k: 48 - 59
    // Nonzeros left: 9 - 12
              47,  0,   44, 47,    2, 41,  // k:  1 -  3
    35, 44,    2, 41,   34,  2,    2, 35,  // k:  4 -  7
     2, 35,   34,  2,   30, 34,   34,  2,  // k:  8 - 11
    34,  2,   34,  2,   34, 34,   33, 34,  // k: 12 - 15
    34, 34,   34,  2,   33, 34,   33, 34,  // k: 16 - 23
    34,  2,   34, 34,   29, 33,   34, 34,  // k: 24 - 31
    34,  2,   34,  2,   34,  2,    0,  0,  // k: 32 - 47
     0,  0,    0,  0,                      // k: 48 - 55
    // Nonzeros left: 13 - 20
              10,  0,   42, 51,    2, 42,  // k:  1 -  3
    41, 47,   41, 47,    2, 41,   41, 44,  // k:  4 -  7
    35, 44,    2, 44,   34, 35,    2, 39,  // k:  8 - 11
    35, 44,   35, 36,    2, 36,   34,  2,  // k: 12 - 15
    35, 36,   35, 36,   34, 35,    2, 35,  // k: 16 - 23
    35, 36,    2, 35,   34, 35,   35, 36,  // k: 24 - 31
    34, 38,    6, 41,    0,  0,    0,  0,  // k: 32 - 47
     0,  0,                                // k: 48 - 51
    // Nonzeros left: 21 - 32
              60,  0,   50, 60,   42, 51,  // k:  1 -  3
    52, 54,   52, 54,   44, 45,   46, 49,  // k:  4 -  7
    49, 53,   40, 46,   37, 45,   38, 46,  // k:  8 - 11
    46, 46,   40, 40,   40, 45,   35, 38,  // k: 12 - 15
    40, 40,   40, 40,   36, 41,    6,  6,  // k: 16 - 23
     0, 37,   33,  6,    0,  0,    0,  0,  // k: 24 - 31
     0,  0,    0,  0,    0,  0,            // k: 32 - 43
    // Nonzeros left: 33 - 63
              16,  0,   15, 12,   11, 60,  // k:  1 -  3
     6, 60,   51, 60,   11, 54,   14, 24,  // k:  4 -  7
     0, 49,    8,  6,    0,  6,    0,  0,  // k:  8 - 11
     0,  0,    0,  0,    0,  0,    0,  0,  // k: 12 - 15
     0,  0,    0,  0,    0,  0,    0,  0,  // k: 16 - 23
     0,  0,    0,  0,    0,  0,    0,  0,  // k: 24 - 31

    //
    // Zero density context map for 8x16 and 16x8 X and B blocks
    //
    // Nonzeros left: 1
              33, 33,   30, 30,    3,  3,  // k:  1 -  3
    32, 31,   31,  3,   31, 31,   31, 31,  // k:  4 -  7
    32, 31,   31, 31,   32, 32,   31, 31,  // k:  8 - 11
     1,  1,   31, 31,   32, 31,    1, 32,  // k: 12 - 15
    32, 31,   32, 31,    1, 32,   32, 32,  // k: 16 - 23
     1,  1,   32, 32,    1,  1,   32, 32,  // k: 24 - 31
    32, 32,   32, 32,   32, 32,   32, 32,  // k: 32 - 47
    32, 31,   31, 31,   31, 31,   30, 30,  // k: 48 - 63
    // Nonzeros left: 2
              34,  2,   33, 34,   33, 33,  // k:  1 -  3
     3, 30,   30, 33,    3, 30,    3, 30,  // k:  4 -  7
    31,  3,    3, 30,   31, 31,    3, 30,  // k:  8 - 11
    32, 32,    3,  3,   31,  3,   32, 31,  // k: 12 - 15
    31, 31,   31, 31,   32, 31,   31, 31,  // k: 16 - 23
    31, 31,   31, 31,   32, 31,   31, 31,  // k: 24 - 31
    31, 31,   31, 31,   31, 31,   31, 31,  // k: 32 - 47
     3,  3,    3,  3,   30, 30,   29, 29,  // k: 48 - 63
    // Nonzeros left: 3 - 4
               2, 41,   34,  2,   34,  2,  // k:  1 -  3
    30, 33,   33, 34,   30, 33,   30, 33,  // k:  4 -  7
     3, 30,   30, 33,    3,  3,   30, 30,  // k:  8 - 11
    31, 31,    3, 30,    3,  3,   31,  3,  // k: 12 - 15
    31,  3,   31,  3,   31,  3,   31, 31,  // k: 16 - 23
    31, 31,   31, 31,   31,  3,    3,  3,  // k: 24 - 31
     3,  3,    3,  3,    3,  3,    3, 30,  // k: 32 - 47
    30, 30,   30, 30,   29, 33,    0,  0,  // k: 48 - 63
    // Nonzeros left: 5 - 8
              42, 42,    2, 41,    2, 35,  // k:  1 -  3
    33, 34,   34,  2,   33, 34,   33, 33,  // k:  4 -  7
    30, 33,   33, 33,   30, 33,   30, 33,  // k:  8 - 11
     3,  3,   30, 30,    3, 30,    3, 30,  // k: 12 - 15
     3, 30,    3, 30,    3,  3,    3,  3,  // k: 16 - 23
     3, 30,    3,  3,    3,  3,   30, 30,  // k: 24 - 31
    30, 30,   30, 30,   30, 30,   29, 29,  // k: 32 - 47
    29, 29,    3,  0,    0,  0,            // k: 48 - 59
    // Nonzeros left: 9 - 12
              42, 42,   35, 41,    2, 41,  // k:  1 -  3
    33,  2,   34, 35,   34,  5,   33, 34,  // k:  4 -  7
    33, 34,   34,  2,   33,  5,   29, 34,  // k:  8 - 11
    30, 33,   29, 34,   33, 34,   33, 34,  // k: 12 - 15
    33, 34,   29, 33,   33, 33,   30, 33,  // k: 16 - 23
    29, 33,   29, 33,   33, 33,   33, 29,  // k: 24 - 31
    33, 29,   29,  6,    0,  0,    0,  0,  // k: 32 - 47
     0,  0,    0,  0,                      // k: 48 - 55
    // Nonzeros left: 13 - 20
              50, 50,   42, 10,   41, 10,  // k:  1 -  3
     2, 44,   41, 42,   35, 42,    2, 41,  // k:  4 -  7
     2, 35,    2, 41,    2, 37,    2, 37,  // k:  8 - 11
    34,  2,   34, 35,   34, 35,   34, 35,  // k: 12 - 15
    34, 35,   34,  2,   34,  2,    2, 36,  // k: 16 - 23
     6, 34,    6,  2,   33, 31,   33,  6,  // k: 24 - 31
     0,  0,    0,  0,    0,  0,    0,  0,  // k: 32 - 47
     0,  0,                                // k: 48 - 51
    // Nonzeros left: 21 - 32
               0, 59,   51, 15,   15, 15,  // k:  1 -  3
    42, 53,   53, 54,   46, 46,   44, 49,  // k:  4 -  7
     6, 40,   11, 46,    6, 40,   34,  7,  // k:  8 - 11
    29, 45,    6, 38,    6, 40,    0,  7,  // k: 12 - 15
     6,  1,   29, 32,    0,  0,    0,  0,  // k: 16 - 23
     0,  0,    0,  0,    0,  0,    0,  0,  // k: 24 - 31
     0,  0,    0,  0,    0,  0,            // k: 32 - 43
    // Nonzeros left: 33 - 63
              25, 20,    0, 19,    0, 14,  // k:  1 -  3
     0,  0,    0,  0,    0,  0,    0,  0,  // k:  4 -  7
     0,  0,    0,  0,    0,  0,    0,  0,  // k:  8 - 11
     0,  0,    0,  0,    0,  0,    0,  0,  // k: 12 - 15
     0,  0,    0,  0,    0,  0,    0,  0,  // k: 16 - 23
     0,  0,    0,  0,    0,  0,    0,  0,  // k: 24 - 31
};
/* clang-format on */
#else
/* clang-format off */
static constexpr uint8_t kACContextMap[] = {
    // Context map for number of nonzeros
    //   8x8   8x16  8x8   8x16
    //    Y     Y    X,B   X,B
          0,    1,    2,    1,    // pred:  0
          3,    4,    2,    2,    // pred:  1
          0,    2,    5,    5,    // pred:  2
          2,    2,    5,    5,    // pred:  3
          0,    2,    5,    5,    // pred:  4
          3,    2,    5,    5,    // pred:  5
          0,    0,    5,    5,    // pred:  6
          3,    0,    5,    0,    // pred:  7
          0,    2,    5,    0,    // pred:  8 -  9
          3,    0,    5,    0,    // pred: 10 - 11
          3,    3,    5,    3,    // pred: 12 - 13
          3,    3,    0,    3,    // pred: 14 - 15
          3,    3,    0,    3,    // pred: 16 - 17
          3,    3,    0,    3,    // pred: 18 - 19
          3,    3,    3,    3,    // pred: 20 - 21
          3,    3,    3,    3,    // pred: 22 - 23
          3,    3,    3,    3,    // pred: 24 - 25
          3,    3,    3,    6,    // pred: 26 - 27
          3,    6,    3,    6,    // pred: 28 - 29
          6,    6,    3,    6,    // pred: 30 - 31
          6,    7,    3,    6,    // pred: 32 - 33
          3,    7,    3,    6,    // pred: 34 - 35
          3,    7,    3,    6,    // pred: 36 - 37
          3,    7,    3,    6,    // pred: 38 - 39
          3,    7,    3,    6,    // pred: 40 - 41
          6,    7,    3,    7,    // pred: 42 - 43
          6,    7,    3,    7,    // pred: 44 - 45
          6,    7,    3,    6,    // pred: 46 - 47
          6,    7,    3,    7,    // pred: 48 - 49
          6,    7,    0,    0,    // pred: 50 - 51
          6,    7,    0,    0,    // pred: 52 - 53
          6,    7,    0,    0,    // pred: 54 - 55
          6,    7,    0,    0,    // pred: 56 - 57
          6,    7,    0,    0,    // pred: 58 - 59
          6,    7,    0,    0,    // pred: 60 - 61
          6,    7,    0,    0,    // pred: 62 - 63
          0,    0,    0,    0,    // pred: 64 -

    //
    // Zero density context map for 8x8 Y blocks
    //
    // Nonzeros left: 1
               0,  1,    1,  1,    1,  1,  // k:  1 -  3
     4,  1,    4,  1,    1,  1,    4,  1,  // k:  4 -  7
     4,  4,    1,  4,    1,  4,    1,  4,  // k:  8 - 11
     1,  4,    4,  4,    1,  4,    1,  4,  // k: 12 - 15
     4,  1,    1,  4,    1,  4,    1,  1,  // k: 16 - 23
     1,  4,    1,  1,    1,  2,    1,  4,  // k: 24 - 31
     1,  2,    1,  4,    1,  4,    1,  1,  // k: 32 - 47
     1,  1,    4,  4,    4,  4,    2,  2,  // k: 48 - 63
    // Nonzeros left: 2
               0,  4,    4,  4,    1,  4,  // k:  1 -  3
     4,  1,    4,  4,    1,  4,    4,  4,  // k:  4 -  7
     4,  1,    1,  1,    1,  4,    4,  4,  // k:  8 - 11
     4,  4,    4,  4,    4,  4,    1,  2,  // k: 12 - 15
     4,  4,    1,  4,    1,  2,    1,  4,  // k: 16 - 23
     1,  1,    4,  2,    1,  2,    1,  4,  // k: 24 - 31
     1,  4,    1,  4,    4,  4,    4,  4,  // k: 32 - 47
     1,  4,    4,  4,    4,  4,    2,  2,  // k: 48 - 63
    // Nonzeros left: 3 - 4
               0,  4,    4,  2,    1,  4,  // k:  1 -  3
     4,  4,    4,  4,    1,  2,    4,  4,  // k:  4 -  7
     4,  4,    4,  4,    1,  2,    4,  4,  // k:  8 - 11
     4,  4,    4,  4,    2,  4,    1,  2,  // k: 12 - 15
     1,  4,    4,  4,    4,  2,    1,  4,  // k: 16 - 23
     4,  4,    4,  4,    1,  2,    4,  4,  // k: 24 - 31
     4,  4,    4,  4,    4,  4,    4,  4,  // k: 32 - 47
     4,  4,    4,  4,    2,  2,    2,  5,  // k: 48 - 63
    // Nonzeros left: 5 - 8
               2,  0,    2,  4,    4,  2,  // k:  1 -  3
     4,  2,    2,  4,    1,  2,    4,  4,  // k:  4 -  7
     2,  4,    1,  2,    1,  0,    4,  2,  // k:  8 - 11
     4,  4,    4,  4,    1,  2,    1,  2,  // k: 12 - 15
     4,  4,    4,  4,    1,  2,    4,  4,  // k: 16 - 23
     4,  4,    4,  2,    1,  2,    4,  4,  // k: 24 - 31
     4,  4,    4,  4,    4,  4,    4,  4,  // k: 32 - 47
     4,  2,    2,  2,    5,  5,            // k: 48 - 59
    // Nonzeros left: 9 - 12
               2,  0,    0,  2,    4,  0,  // k:  1 -  3
     2,  2,    0,  2,    1,  2,    4,  2,  // k:  4 -  7
     2,  2,    4,  2,    4,  4,    4,  2,  // k:  8 - 11
     2,  4,    2,  4,    2,  2,    1,  0,  // k: 12 - 15
     4,  2,    4,  4,    4,  2,    4,  2,  // k: 16 - 23
     4,  4,    4,  4,    4,  4,    4,  4,  // k: 24 - 31
     4,  4,    4,  4,    4,  2,    2,  2,  // k: 32 - 47
     2,  5,    5,  5,                      // k: 48 - 55
    // Nonzeros left: 13 - 20
               2,  0,    2,  0,    2,  2,  // k:  1 -  3
     2,  2,    2,  2,    4,  2,    2,  2,  // k:  4 -  7
     2,  2,    4,  2,    4,  2,    4,  2,  // k:  8 - 11
     2,  2,    2,  2,    4,  2,    4,  4,  // k: 12 - 15
     4,  2,    2,  2,    4,  4,    4,  2,  // k: 16 - 23
     2,  2,    4,  4,    4,  4,    2,  2,  // k: 24 - 31
     2,  2,    2,  2,    2,  5,    5,  5,  // k: 32 - 47
     5,  5,                                // k: 48 - 51
    // Nonzeros left: 21 - 32
               5,  0,    2,  5,    2,  2,  // k:  1 -  3
     2,  2,    2,  2,    2,  2,    2,  2,  // k:  4 -  7
     2,  2,    2,  2,    2,  2,    2,  2,  // k:  8 - 11
     2,  2,    2,  2,    2,  2,    2,  2,  // k: 12 - 15
     2,  2,    2,  2,    2,  2,    2,  2,  // k: 16 - 23
     2,  5,    2,  0,    2,  5,    5,  0,  // k: 24 - 31
     5,  0,    5,  0,    0,  0,            // k: 32 - 43
    // Nonzeros left: 33 - 63
               7,  0,    0,  7,    0,  7,  // k:  1 -  3
     0,  7,    7,  7,    0,  7,    7,  7,  // k:  4 -  7
     0,  7,    0,  7,    0,  3,    0,  7,  // k:  8 - 11
     3,  7,    3,  7,    0,  3,    0,  3,  // k: 12 - 15
     3,  3,    0,  3,    0,  0,    0,  3,  // k: 16 - 23
     3,  3,    0,  0,    0,  0,    0,  3,  // k: 24 - 31

    //
    // Zero density context map for 8x16 and 16x8 Y blocks
    //
    // Nonzeros left: 1
               4,  4,    1,  1,    4,  4,  // k:  1 -  3
     1,  1,    1,  1,    4,  4,    1,  1,  // k:  4 -  7
     1,  1,    1,  1,    4,  4,    1,  4,  // k:  8 - 11
     1,  1,    1,  1,    1,  1,    4,  1,  // k: 12 - 15
     1,  1,    1,  1,    4,  4,    1,  1,  // k: 16 - 23
     1,  1,    1,  4,    4,  4,    1,  1,  // k: 24 - 31
     1,  4,    1,  1,    1,  1,    1,  1,  // k: 32 - 47
     1,  1,    1,  1,    1,  1,    4,  4,  // k: 48 - 63
    // Nonzeros left: 2
               4,  4,    1,  1,    2,  4,  // k:  1 -  3
     1,  4,    1,  4,    2,  4,    1,  4,  // k:  4 -  7
     1,  4,    4,  1,    2,  4,    1,  4,  // k:  8 - 11
     1,  1,    1,  4,    4,  4,    2,  2,  // k: 12 - 15
     1,  1,    1,  4,    4,  2,    1,  1,  // k: 16 - 23
     1,  1,    4,  4,    1,  4,    1,  1,  // k: 24 - 31
     1,  4,    1,  4,    1,  4,    1,  1,  // k: 32 - 47
     1,  1,    1,  1,    4,  4,    4,  2,  // k: 48 - 63
    // Nonzeros left: 3 - 4
               4,  2,    4,  4,    5,  2,  // k:  1 -  3
     1,  1,    4,  1,    2,  2,    1,  1,  // k:  4 -  7
     1,  4,    4,  4,    2,  2,    1,  1,  // k:  8 - 11
     1,  4,    1,  1,    4,  2,    4,  5,  // k: 12 - 15
     1,  1,    1,  4,    4,  2,    1,  1,  // k: 16 - 23
     1,  1,    4,  4,    4,  2,    1,  1,  // k: 24 - 31
     4,  4,    1,  4,    1,  4,    1,  4,  // k: 32 - 47
     4,  4,    4,  4,    4,  2,    2,  2,  // k: 48 - 63
    // Nonzeros left: 5 - 8
               0,  4,    2,  2,    2,  0,  // k:  1 -  3
     1,  4,    2,  5,    2,  0,    1,  4,  // k:  4 -  7
     1,  4,    2,  2,    4,  5,    4,  4,  // k:  8 - 11
     1,  1,    4,  4,    4,  2,    4,  2,  // k: 12 - 15
     4,  4,    1,  4,    2,  0,    4,  4,  // k: 16 - 23
     1,  4,    4,  4,    4,  2,    1,  4,  // k: 24 - 31
     4,  4,    4,  4,    4,  4,    4,  4,  // k: 32 - 47
     4,  4,    4,  2,    2,  2,            // k: 48 - 59
    // Nonzeros left: 9 - 12
               3,  2,    5,  2,    0,  0,  // k:  1 -  3
     4,  4,    2,  2,    4,  0,    4,  4,  // k:  4 -  7
     4,  4,    2,  2,    4,  0,    4,  4,  // k:  8 - 11
     1,  4,    4,  4,    2,  2,    4,  0,  // k: 12 - 15
     4,  4,    4,  4,    4,  2,    4,  4,  // k: 16 - 23
     4,  4,    4,  4,    4,  4,    4,  4,  // k: 24 - 31
     4,  4,    4,  4,    4,  4,    4,  4,  // k: 32 - 47
     2,  2,    5,  5,                      // k: 48 - 55
    // Nonzeros left: 13 - 20
               7,  2,    0,  5,    5,  0,  // k:  1 -  3
     4,  2,    2,  2,    4,  2,    4,  4,  // k:  4 -  7
     4,  4,    2,  2,    4,  4,    4,  4,  // k:  8 - 11
     4,  4,    4,  4,    4,  4,    4,  4,  // k: 12 - 15
     4,  4,    4,  4,    4,  4,    4,  4,  // k: 16 - 23
     4,  4,    4,  4,    4,  4,    4,  4,  // k: 24 - 31
     4,  4,    4,  2,    2,  2,    2,  5,  // k: 32 - 47
     5,  5,                                // k: 48 - 51
    // Nonzeros left: 21 - 32
               0,  5,    2,  5,    2,  5,  // k:  1 -  3
     2,  2,    2,  2,    2,  2,    2,  2,  // k:  4 -  7
     2,  2,    2,  2,    4,  2,    2,  2,  // k:  8 - 11
     4,  4,    2,  2,    2,  2,    4,  2,  // k: 12 - 15
     2,  2,    2,  2,    2,  2,    2,  2,  // k: 16 - 23
     2,  2,    2,  5,    2,  5,    2,  5,  // k: 24 - 31
     2,  5,    5,  5,    5,  5,            // k: 32 - 43
    // Nonzeros left: 33 - 63
               7,  7,    0,  7,    5,  7,  // k:  1 -  3
     5,  7,    0,  7,    5,  7,    5,  7,  // k:  4 -  7
     5,  3,    0,  7,    0,  3,    0,  3,  // k:  8 - 11
     5,  0,    0,  3,    0,  3,    5,  0,  // k: 12 - 15
     0,  0,    5,  0,    0,  0,    0,  0,  // k: 16 - 23
     5,  0,    0,  0,    0,  0,    3,  3,  // k: 24 - 31

    //
    // Zero density context map for 8x8 X and B blocks
    //
    // Nonzeros left: 1
               0,  1,    4,  4,    1,  1,  // k:  1 -  3
     4,  4,    1,  1,    1,  1,    1,  1,  // k:  4 -  7
     1,  1,    1,  1,    1,  1,    1,  1,  // k:  8 - 11
     1,  1,    1,  1,    1,  1,    1,  1,  // k: 12 - 15
     1,  1,    1,  1,    1,  1,    1,  1,  // k: 16 - 23
     1,  1,    1,  1,    1,  1,    1,  1,  // k: 24 - 31
     1,  1,    1,  1,    1,  1,    1,  1,  // k: 32 - 47
     1,  1,    1,  1,    4,  4,    4,  4,  // k: 48 - 63
    // Nonzeros left: 2
               0,  4,    4,  2,    1,  1,  // k:  1 -  3
     4,  4,    4,  4,    1,  1,    1,  4,  // k:  4 -  7
     4,  4,    1,  1,    1,  1,    1,  1,  // k:  8 - 11
     1,  4,    1,  1,    1,  1,    1,  1,  // k: 12 - 15
     1,  1,    1,  1,    1,  1,    1,  1,  // k: 16 - 23
     1,  1,    1,  1,    1,  1,    1,  1,  // k: 24 - 31
     1,  1,    1,  1,    1,  1,    1,  1,  // k: 32 - 47
     1,  1,    1,  1,    4,  4,    4,  4,  // k: 48 - 63
    // Nonzeros left: 3 - 4
               0,  2,    2,  2,    4,  4,  // k:  1 -  3
     4,  4,    4,  4,    1,  1,    4,  4,  // k:  4 -  7
     4,  4,    1,  4,    1,  1,    1,  4,  // k:  8 - 11
     4,  4,    1,  4,    1,  1,    1,  1,  // k: 12 - 15
     1,  1,    1,  1,    1,  1,    1,  1,  // k: 16 - 23
     1,  1,    1,  1,    1,  1,    1,  1,  // k: 24 - 31
     1,  1,    1,  1,    1,  1,    1,  1,  // k: 32 - 47
     4,  4,    4,  4,    4,  4,    4,  4,  // k: 48 - 63
    // Nonzeros left: 5 - 8
               2,  0,    2,  5,    4,  4,  // k:  1 -  3
     2,  2,    4,  4,    1,  4,    4,  4,  // k:  4 -  7
     4,  4,    4,  4,    1,  1,    4,  4,  // k:  8 - 11
     4,  4,    4,  4,    1,  1,    1,  1,  // k: 12 - 15
     1,  4,    1,  1,    1,  1,    1,  1,  // k: 16 - 23
     1,  1,    1,  1,    1,  1,    1,  1,  // k: 24 - 31
     1,  1,    1,  4,    4,  4,    4,  4,  // k: 32 - 47
     4,  4,    4,  4,    4,  4,            // k: 48 - 59
    // Nonzeros left: 9 - 12
               5,  0,    2,  5,    4,  2,  // k:  1 -  3
     2,  2,    4,  2,    4,  4,    4,  4,  // k:  4 -  7
     4,  4,    4,  4,    1,  1,    4,  4,  // k:  8 - 11
     4,  4,    4,  4,    4,  4,    1,  4,  // k: 12 - 15
     4,  4,    4,  4,    1,  1,    4,  4,  // k: 16 - 23
     4,  4,    4,  4,    4,  4,    4,  4,  // k: 24 - 31
     4,  4,    4,  4,    4,  4,    4,  4,  // k: 32 - 47
     4,  4,    2,  4,                      // k: 48 - 55
    // Nonzeros left: 13 - 20
               5,  0,    2,  5,    4,  2,  // k:  1 -  3
     2,  2,    4,  2,    4,  4,    4,  4,  // k:  4 -  7
     4,  4,    4,  4,    4,  4,    4,  4,  // k:  8 - 11
     4,  4,    4,  4,    4,  4,    4,  4,  // k: 12 - 15
     4,  4,    4,  4,    4,  4,    4,  4,  // k: 16 - 23
     4,  4,    4,  4,    4,  4,    4,  4,  // k: 24 - 31
     4,  4,    4,  4,    4,  4,    4,  4,  // k: 32 - 47
     2,  2,                                // k: 48 - 51
    // Nonzeros left: 21 - 32
               5,  0,    2,  5,    2,  2,  // k:  1 -  3
     2,  2,    2,  2,    4,  2,    2,  2,  // k:  4 -  7
     2,  2,    4,  2,    4,  4,    4,  2,  // k:  8 - 11
     4,  2,    4,  2,    4,  2,    4,  4,  // k: 12 - 15
     4,  2,    4,  2,    4,  4,    4,  4,  // k: 16 - 23
     4,  2,    4,  2,    4,  4,    4,  2,  // k: 24 - 31
     2,  2,    2,  5,    0,  0,            // k: 32 - 43
    // Nonzeros left: 33 - 63
               0,  0,    2,  0,    2,  5,  // k:  1 -  3
     2,  5,    2,  5,    2,  2,    2,  5,  // k:  4 -  7
     2,  5,    2,  5,    2,  2,    2,  5,  // k:  8 - 11
     2,  5,    2,  5,    2,  5,    2,  2,  // k: 12 - 15
     2,  2,    2,  2,    5,  2,    2,  0,  // k: 16 - 23
     0,  0,    0,  0,    0,  0,    0,  0,  // k: 24 - 31

    //
    // Zero density context map for 8x16 and 16x8 X and B blocks
    //
    // Nonzeros left: 1
               1,  1,    1,  1,    1,  1,  // k:  1 -  3
     1,  1,    1,  1,    1,  1,    1,  1,  // k:  4 -  7
     1,  1,    1,  1,    1,  1,    1,  1,  // k:  8 - 11
     1,  1,    1,  1,    1,  1,    1,  1,  // k: 12 - 15
     1,  1,    1,  1,    1,  1,    1,  1,  // k: 16 - 23
     1,  1,    1,  1,    1,  1,    1,  1,  // k: 24 - 31
     1,  1,    1,  1,    1,  1,    1,  1,  // k: 32 - 47
     1,  1,    1,  1,    1,  1,    1,  1,  // k: 48 - 63
    // Nonzeros left: 2
               1,  4,    1,  1,    1,  1,  // k:  1 -  3
     1,  1,    1,  1,    1,  1,    1,  1,  // k:  4 -  7
     1,  1,    1,  1,    1,  1,    1,  1,  // k:  8 - 11
     1,  1,    1,  1,    1,  1,    1,  1,  // k: 12 - 15
     1,  1,    1,  1,    1,  1,    1,  1,  // k: 16 - 23
     1,  1,    1,  1,    1,  1,    1,  1,  // k: 24 - 31
     1,  1,    1,  1,    1,  1,    1,  1,  // k: 32 - 47
     1,  1,    1,  1,    1,  1,    4,  4,  // k: 48 - 63
    // Nonzeros left: 3 - 4
               4,  4,    4,  4,    4,  4,  // k:  1 -  3
     1,  1,    1,  4,    1,  1,    1,  1,  // k:  4 -  7
     1,  1,    1,  1,    1,  1,    1,  1,  // k:  8 - 11
     1,  1,    1,  1,    1,  1,    1,  1,  // k: 12 - 15
     1,  1,    1,  1,    1,  1,    1,  1,  // k: 16 - 23
     1,  1,    1,  1,    1,  1,    1,  1,  // k: 24 - 31
     1,  1,    1,  1,    1,  1,    1,  1,  // k: 32 - 47
     1,  1,    1,  1,    4,  4,    4,  4,  // k: 48 - 63
    // Nonzeros left: 5 - 8
               2,  2,    4,  4,    4,  4,  // k:  1 -  3
     1,  4,    4,  4,    4,  4,    1,  4,  // k:  4 -  7
     1,  4,    4,  4,    1,  1,    4,  4,  // k:  8 - 11
     1,  1,    4,  4,    1,  1,    1,  1,  // k: 12 - 15
     1,  1,    1,  1,    1,  1,    1,  1,  // k: 16 - 23
     1,  1,    1,  1,    1,  1,    1,  1,  // k: 24 - 31
     1,  1,    1,  1,    1,  1,    4,  4,  // k: 32 - 47
     4,  4,    4,  4,    4,  4,            // k: 48 - 59
    // Nonzeros left: 9 - 12
               2,  2,    4,  2,    4,  4,  // k:  1 -  3
     4,  4,    4,  4,    4,  4,    4,  4,  // k:  4 -  7
     4,  4,    4,  4,    1,  1,    4,  4,  // k:  8 - 11
     1,  1,    1,  4,    1,  1,    1,  1,  // k: 12 - 15
     1,  1,    1,  1,    1,  1,    1,  1,  // k: 16 - 23
     1,  1,    1,  1,    1,  4,    4,  4,  // k: 24 - 31
     4,  4,    4,  4,    4,  4,    4,  4,  // k: 32 - 47
     4,  4,    4,  4,                      // k: 48 - 55
    // Nonzeros left: 13 - 20
               2,  2,    4,  2,    4,  2,  // k:  1 -  3
     4,  4,    4,  4,    4,  4,    4,  4,  // k:  4 -  7
     4,  4,    4,  4,    4,  4,    4,  4,  // k:  8 - 11
     4,  4,    4,  4,    4,  4,    4,  4,  // k: 12 - 15
     4,  4,    4,  4,    4,  4,    4,  4,  // k: 16 - 23
     4,  4,    4,  4,    4,  4,    4,  4,  // k: 24 - 31
     4,  4,    4,  4,    4,  4,    4,  4,  // k: 32 - 47
     0,  0,                                // k: 48 - 51
    // Nonzeros left: 21 - 32
               5,  5,    2,  2,    2,  2,  // k:  1 -  3
     4,  2,    2,  2,    4,  4,    4,  4,  // k:  4 -  7
     4,  4,    4,  4,    4,  4,    4,  4,  // k:  8 - 11
     4,  4,    4,  4,    4,  4,    4,  4,  // k: 12 - 15
     4,  4,    4,  4,    4,  4,    4,  4,  // k: 16 - 23
     4,  4,    4,  4,    4,  4,    4,  4,  // k: 24 - 31
     2,  2,    0,  0,    0,  0,            // k: 32 - 43
    // Nonzeros left: 33 - 63
               0,  5,    2,  5,    2,  5,  // k:  1 -  3
     2,  2,    2,  2,    2,  2,    2,  2,  // k:  4 -  7
     2,  2,    2,  2,    2,  2,    2,  2,  // k:  8 - 11
     4,  4,    2,  4,    2,  2,    0,  0,  // k: 12 - 15
     0,  2,    0,  1,    0,  0,    0,  0,  // k: 16 - 23
     0,  0,    0,  0,    0,  0,    0,  0,  // k: 24 - 31
};
/* clang-format on */
static constexpr size_t kNumACPrefixCodes = 8;
static constexpr PrefixCode kACPrefixCodes[kNumACPrefixCodes] = {
    {{
         4,  4,  4,  4,  4,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,
         4,  4,  5,  5,  4,  5,  6,  6,  6,  7,  9,  9,  9,  11, 12, 13,
         13, 14, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
         15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
     },
     {
         0x0000, 0x0008, 0x0004, 0x000c, 0x0002, 0x0001, 0x0011, 0x0009,
         0x0019, 0x0005, 0x0015, 0x000d, 0x001d, 0x0003, 0x0013, 0x000b,
         0x000a, 0x0006, 0x001b, 0x0007, 0x000e, 0x0017, 0x000f, 0x002f,
         0x001f, 0x003f, 0x007f, 0x017f, 0x00ff, 0x01ff, 0x05ff, 0x0dff,
         0x1dff, 0x03ff, 0x23ff, 0x63ff, 0x13ff, 0x53ff, 0x33ff, 0x73ff,
         0x0bff, 0x4bff, 0x2bff, 0x6bff, 0x1bff, 0x5bff, 0x3bff, 0x7bff,
         0x07ff, 0x47ff, 0x27ff, 0x67ff, 0x17ff, 0x57ff, 0x37ff, 0x77ff,
         0x0fff, 0x4fff, 0x2fff, 0x6fff, 0x1fff, 0x5fff, 0x3fff, 0x7fff,
     }},
    {{
         1,  2,  3,  5,  4,  6,  7,  9,  9,  11, 11, 12, 12, 12, 13, 13,
         12, 12, 14, 15, 14, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
         15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
         15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
     },
     {
         0x0000, 0x0001, 0x0003, 0x000f, 0x0007, 0x001f, 0x003f, 0x007f,
         0x017f, 0x00ff, 0x04ff, 0x02ff, 0x0aff, 0x06ff, 0x09ff, 0x19ff,
         0x0eff, 0x01ff, 0x05ff, 0x15ff, 0x25ff, 0x55ff, 0x35ff, 0x75ff,
         0x0dff, 0x4dff, 0x2dff, 0x6dff, 0x1dff, 0x5dff, 0x3dff, 0x7dff,
         0x03ff, 0x43ff, 0x23ff, 0x63ff, 0x13ff, 0x53ff, 0x33ff, 0x73ff,
         0x0bff, 0x4bff, 0x2bff, 0x6bff, 0x1bff, 0x5bff, 0x3bff, 0x7bff,
         0x07ff, 0x47ff, 0x27ff, 0x67ff, 0x17ff, 0x57ff, 0x37ff, 0x77ff,
         0x0fff, 0x4fff, 0x2fff, 0x6fff, 0x1fff, 0x5fff, 0x3fff, 0x7fff,
     }},
    {{
         2,  3,  3,  4,  3,  4,  4,  5,  5,  6,  6,  6,  6,  7,  7,  7,
         6,  7,  8,  8,  8,  10, 11, 12, 11, 12, 13, 13, 13, 14, 15, 15,
         15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
         15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
     },
     {
         0x0000, 0x0002, 0x0006, 0x0005, 0x0001, 0x000d, 0x0003, 0x000b,
         0x001b, 0x0007, 0x0027, 0x0017, 0x0037, 0x002f, 0x006f, 0x001f,
         0x000f, 0x005f, 0x003f, 0x00bf, 0x007f, 0x00ff, 0x02ff, 0x01ff,
         0x06ff, 0x09ff, 0x05ff, 0x15ff, 0x0dff, 0x1dff, 0x3dff, 0x7dff,
         0x03ff, 0x43ff, 0x23ff, 0x63ff, 0x13ff, 0x53ff, 0x33ff, 0x73ff,
         0x0bff, 0x4bff, 0x2bff, 0x6bff, 0x1bff, 0x5bff, 0x3bff, 0x7bff,
         0x07ff, 0x47ff, 0x27ff, 0x67ff, 0x17ff, 0x57ff, 0x37ff, 0x77ff,
         0x0fff, 0x4fff, 0x2fff, 0x6fff, 0x1fff, 0x5fff, 0x3fff, 0x7fff,
     }},
    {{
         5,  5,  5,  5,  5,  5,  5,  5,  5,  6,  5,  6,  6,  6,  6,  6,
         4,  4,  4,  4,  4,  4,  5,  5,  4,  5,  6,  6,  6,  7,  8,  10,
         10, 11, 13, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
         14, 14, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
     },
     {
         0x000e, 0x001e, 0x0001, 0x0011, 0x0009, 0x0019, 0x0005, 0x0015,
         0x000d, 0x001b, 0x001d, 0x003b, 0x0007, 0x0027, 0x0017, 0x0037,
         0x0000, 0x0008, 0x0004, 0x000c, 0x0002, 0x000a, 0x0003, 0x0013,
         0x0006, 0x000b, 0x000f, 0x002f, 0x001f, 0x003f, 0x007f, 0x00ff,
         0x02ff, 0x01ff, 0x05ff, 0x15ff, 0x35ff, 0x0dff, 0x2dff, 0x1dff,
         0x3dff, 0x03ff, 0x23ff, 0x13ff, 0x33ff, 0x0bff, 0x2bff, 0x1bff,
         0x3bff, 0x07ff, 0x27ff, 0x67ff, 0x17ff, 0x57ff, 0x37ff, 0x77ff,
         0x0fff, 0x4fff, 0x2fff, 0x6fff, 0x1fff, 0x5fff, 0x3fff, 0x7fff,
     }},
    {{
         1,  3,  2,  5,  4,  7,  7,  8,  8,  9,  9,  11, 11, 12, 12, 12,
         11, 12, 14, 15, 14, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
         15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
         15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
     },
     {
         0x0000, 0x0003, 0x0001, 0x000f, 0x0007, 0x001f, 0x005f, 0x003f,
         0x00bf, 0x007f, 0x017f, 0x00ff, 0x04ff, 0x06ff, 0x0eff, 0x01ff,
         0x02ff, 0x09ff, 0x05ff, 0x15ff, 0x25ff, 0x55ff, 0x35ff, 0x75ff,
         0x0dff, 0x4dff, 0x2dff, 0x6dff, 0x1dff, 0x5dff, 0x3dff, 0x7dff,
         0x03ff, 0x43ff, 0x23ff, 0x63ff, 0x13ff, 0x53ff, 0x33ff, 0x73ff,
         0x0bff, 0x4bff, 0x2bff, 0x6bff, 0x1bff, 0x5bff, 0x3bff, 0x7bff,
         0x07ff, 0x47ff, 0x27ff, 0x67ff, 0x17ff, 0x57ff, 0x37ff, 0x77ff,
         0x0fff, 0x4fff, 0x2fff, 0x6fff, 0x1fff, 0x5fff, 0x3fff, 0x7fff,
     }},
    {{
         3,  4,  4,  4,  4,  4,  4,  4,  4,  5,  5,  5,  5,  5,  5,  6,
         4,  5,  5,  6,  6,  7,  9,  9,  10, 11, 12, 12, 12, 14, 14, 14,
         14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
         14, 14, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
     },
     {
         0x0000, 0x0004, 0x000c, 0x0002, 0x000a, 0x0006, 0x000e, 0x0001,
         0x0009, 0x000d, 0x001d, 0x0003, 0x0013, 0x000b, 0x001b, 0x000f,
         0x0005, 0x0007, 0x0017, 0x002f, 0x001f, 0x003f, 0x007f, 0x017f,
         0x00ff, 0x02ff, 0x06ff, 0x0eff, 0x01ff, 0x09ff, 0x29ff, 0x19ff,
         0x39ff, 0x05ff, 0x25ff, 0x15ff, 0x35ff, 0x0dff, 0x2dff, 0x1dff,
         0x3dff, 0x03ff, 0x23ff, 0x13ff, 0x33ff, 0x0bff, 0x2bff, 0x1bff,
         0x3bff, 0x07ff, 0x27ff, 0x67ff, 0x17ff, 0x57ff, 0x37ff, 0x77ff,
         0x0fff, 0x4fff, 0x2fff, 0x6fff, 0x1fff, 0x5fff, 0x3fff, 0x7fff,
     }},
    {{
         9,  13, 13, 14, 13, 14, 13, 13, 13, 12, 12, 12, 11, 12, 11, 12,
         10, 9,  8,  6,  5,  3,  2,  1,  4,  9,  11, 12, 15, 15, 15, 15,
         15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
         15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
     },
     {
         0x00bf, 0x01ff, 0x11ff, 0x0dff, 0x09ff, 0x2dff, 0x19ff, 0x05ff,
         0x15ff, 0x04ff, 0x0cff, 0x02ff, 0x037f, 0x0aff, 0x077f, 0x06ff,
         0x017f, 0x01bf, 0x003f, 0x001f, 0x000f, 0x0003, 0x0001, 0x0000,
         0x0007, 0x007f, 0x00ff, 0x0eff, 0x1dff, 0x5dff, 0x3dff, 0x7dff,
         0x03ff, 0x43ff, 0x23ff, 0x63ff, 0x13ff, 0x53ff, 0x33ff, 0x73ff,
         0x0bff, 0x4bff, 0x2bff, 0x6bff, 0x1bff, 0x5bff, 0x3bff, 0x7bff,
         0x07ff, 0x47ff, 0x27ff, 0x67ff, 0x17ff, 0x57ff, 0x37ff, 0x77ff,
         0x0fff, 0x4fff, 0x2fff, 0x6fff, 0x1fff, 0x5fff, 0x3fff, 0x7fff,
     }},
    {{
         5,  5,  5,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  7,
         5,  5,  5,  5,  4,  5,  5,  5,  4,  4,  4,  5,  4,  5,  5,  6,
         5,  6,  7,  8,  8,  8,  10, 10, 11, 12, 13, 14, 14, 14, 14, 14,
         14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 15, 15, 15, 15, 15, 15,
     },
     {
         0x000a, 0x001a, 0x0006, 0x0003, 0x0023, 0x0013, 0x0033, 0x000b,
         0x002b, 0x001b, 0x003b, 0x0007, 0x0027, 0x0017, 0x0037, 0x001f,
         0x0016, 0x000e, 0x001e, 0x0001, 0x0000, 0x0011, 0x0009, 0x0019,
         0x0008, 0x0004, 0x000c, 0x0005, 0x0002, 0x0015, 0x000d, 0x000f,
         0x001d, 0x002f, 0x005f, 0x003f, 0x00bf, 0x007f, 0x00ff, 0x02ff,
         0x01ff, 0x05ff, 0x0dff, 0x1dff, 0x3dff, 0x03ff, 0x23ff, 0x13ff,
         0x33ff, 0x0bff, 0x2bff, 0x1bff, 0x3bff, 0x07ff, 0x27ff, 0x17ff,
         0x37ff, 0x0fff, 0x2fff, 0x6fff, 0x1fff, 0x5fff, 0x3fff, 0x7fff,
     }},
};
#endif

}  // namespace jxl

#endif  // ENCODER_STATIC_ENTROPY_CODES_H_
